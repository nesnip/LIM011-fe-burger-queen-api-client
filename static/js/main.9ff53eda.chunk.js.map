{"version":3,"sources":["assets/images/burger.png","assets/images/garbage.svg","styles.module.css","components/LoginForm/LoginForm.jsx","controller/token.jsx","containers/LoginApp.jsx","components/ItemProduct/ItemProduct.jsx","components/Menu/Menu.jsx","components/Header/Header.jsx","components/ItemOrder/ItemOrder.jsx","components/Orders/Orders.jsx","controller/products.jsx","controller/Orders/AddOrders.js","containers/Home.jsx","components/Menu/MenuKitchen.jsx","controller/Orders/EditOrder.js","controller/Orders/DeleteOrder.js","components/ItemOrderProducts/ItemOrderProducts.jsx","controller/Orders/GetOrders.js","components/OrderKitchen/OrderKitchen.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","LoginForm","email","password","handleSubmit","handleEmail","handlePassword","className","onSubmit","src","burger","alt","type","value","id","placeholder","onChange","onClick","token","fetch","method","body","JSON","stringify","headers","then","res","status","console","log","json","Promise","reject","LoginApp","history","useHistory","useState","setEmail","setPassword","e","preventDefault","undefined","localStorage","setItem","getItem","push","target","ItemProduct","image","name","price","addProduct","quantity","setQuantity","data-testid","role","aria-label","disabled","Menu","handleClick","dataProducts","href","map","objProduct","key","_id","Header","to","ItemOrder","qty","deleteProduct","trash","Orders","dataOrder","sendOrder","handleName","totalPrice","forEach","el","objOrder","getProducts","Authorization","statusText","Addorders","userId","client","products","Home","setDataProducts","setDataOrder","category","setCategory","setClient","updateProducts","filter","obj","useEffect","styles","flex","count","idProduct","arr","index","findIndex","tempProduct","find","splice","AddOrders","productId","alert","MenuKitchen","chooseCategory","EditOrder","ArrayProduct","DeleteOrder","ItemOrderProducts","dateEntry","dateProcessed","viewAllOrder","product","GetOrders","OrderKitchen","AlldataOrder","setAllDataOrder","NewDataOrders","length","AllDataOrder","App","path","component","OrdersKitchen","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9ff53eda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger.be93cb1b.png\";","module.exports = __webpack_public_path__ + \"static/media/garbage.56b66ec8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"styles_flex__397fI\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './LoginForm.css';\nimport burger from '../../assets/images/burger.png';\n\nconst LoginForm = ({\n  email, password, handleSubmit, handleEmail, handlePassword,\n}) => (\n  <div className=\"container-form\">\n    <form className=\"login\" onSubmit={handleSubmit}>\n      <img src={burger} alt=\"logo\" className=\"logo\" />\n      <p className=\"title\">\n        <span className=\"title initials\">B</span>\n        urger\n        {' '}\n        <span className=\"title initials\">Q</span>\n        ueen\n      </p>\n      <input\n        type=\"email\"\n        value={email}\n        className=\"txt-form\"\n        id=\"email-login\"\n        placeholder=\"Ingrese E-mail\"\n        onChange={handleEmail}\n      />\n      <input\n        type=\"password\"\n        value={password}\n        className=\"txt-form\"\n        id=\"password-login\"\n        placeholder=\"Ingrese Contraseña\"\n        onChange={handlePassword}\n      />\n      <button className=\"btn-form\" id=\"btn-login\" type=\"submit\" onClick={handleSubmit}>\n        Iniciar sesión\n      </button>\n    </form>\n  </div>\n\n);\nLoginForm.propTypes = {\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleEmail: PropTypes.func.isRequired,\n  handlePassword: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","const token = (email, password) => fetch('http://138.68.51.45/auth', {\n  method: 'POST', // or 'PUT'\n  body: JSON.stringify({ email, password }),\n  headers: { 'Content-Type': 'application/json' },\n}).then((res) => {\n  if (res.status === 200) {\n    console.log(res);\n    return res.json();\n  } if (res.status === 400) {\n    console.log(res);\n    return Promise.reject(console.log('ingrese email y contraseña'));\n  }\n  return '';\n});\n\nexport default token;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport LoginForm from '../components/LoginForm/LoginForm';\nimport token from '../controller/token';\n// import postOrder from './AddOrder';\n\nconst LoginApp = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    token(email, password).then((res) => {\n      if (res.token === undefined) {\n        console.log('Email y contraseña incorrecto');\n      } else {\n        localStorage.setItem('token', res.token);\n        console.log(`este es el token: ${localStorage.getItem('token')}`);\n        history.push('/Home');\n      }\n    });\n  };\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n  return (\n    <LoginForm\n      email={email}\n      password={password}\n      handleSubmit={handleSubmit}\n      handleEmail={handleEmail}\n      handlePassword={handlePassword}\n    />\n  );\n};\n\nexport default LoginApp;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './ItemProduct.css';\n\nconst ItemProduct = ({\n  id, image, name, price, addProduct,\n}) => {\n  const [quantity, setQuantity] = useState(0);\n  return (\n    <div className=\"card\">\n      <img\n        src={image}\n        alt=\"imagen\"\n        className=\"item-photo\"\n      />\n      <div className=\"card-text\">\n        <p className=\"card-name\" data-testid=\"itemProduct\">{name}</p>\n        <p className=\"card-price\" data-testid=\"item-price\">\n          S/.\n          {price}\n          .00\n        </p>\n      </div>\n      <div className=\"btn-group btn-container\" role=\"group\" aria-label=\"Basic example\">\n        <button\n          type=\"button\"\n          className=\"btn btn-dark\"\n          onClick={() => {\n            if (quantity > 0) {\n              setQuantity(quantity - 1);\n            } else {\n              setQuantity(0);\n            }\n          }}\n        >\n          -\n        </button>\n        <input data-testid=\"item-count\" className=\"quantity btn btn-dark\" value={quantity} onChange={() => {}} />\n        <button\n          type=\"button\"\n          className=\"btn btn-dark\"\n          onClick={() => {\n            setQuantity(quantity + 1);\n          }}\n        >\n          +\n        </button>\n      </div>\n      <button\n        type=\"button\"\n        className=\"btn btn-dark\"\n        disabled={quantity <= 0}\n        onClick={() => {\n          addProduct(quantity, id);\n          setQuantity(0);\n        }}\n      >\n        Agregar\n      </button>\n    </div>\n  );\n};\n\nItemProduct.propTypes = {\n  id: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  addProduct: PropTypes.func.isRequired,\n};\n\nexport default ItemProduct;\n","import React from 'react';\nimport './Menu.css';\nimport PropTypes from 'prop-types';\nimport ItemProduct from '../ItemProduct/ItemProduct';\n\nconst Menu = ({\n  handleClick, dataProducts, addProduct,\n}) => (\n  <>\n    <ul>\n      <li><a href=\"#breakfast\" id=\"desayuno\" onClick={() => handleClick('desayuno')}>Desayuno</a></li>\n      <li><a href=\"#lunch\" id=\"almuerzo\" onClick={() => handleClick('almuerzo')}>Almuerzo</a></li>\n      <li><a href=\"#complements\" id=\"complementos\" onClick={() => handleClick('complementos')}>Complementos</a></li>\n      <li><a href=\"#drinks\" id=\"bebida\" onClick={() => handleClick('bebida')}>Bebidas</a></li>\n    </ul>\n    <div className=\"container-card\">\n      {dataProducts.map((objProduct) => (\n        <ItemProduct\n          key={objProduct._id}\n          id={objProduct._id}\n          image={objProduct.image}\n          name={objProduct.name}\n          price={objProduct.price}\n          objProduct={objProduct}\n          addProduct={addProduct}\n        />\n      ))}\n    </div>\n  </>\n);\nMenu.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  dataProducts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addProduct: PropTypes.func.isRequired,\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Header.css';\nimport { Link } from 'react-router-dom';\nimport burger from '../../assets/images/burger.png';\n\nconst Header = () => (\n  <ul className=\"nav-header\">\n    <li className=\"title-li\">\n      <p className=\"title-header\">\n        <img src={burger} alt=\"logo\" className=\"logo-header\" />\n        <span className=\"title-header initials-header\">B</span>\n        urger\n        {' '}\n        <span className=\"title-header initials-header\">Q</span>\n        ueen\n      </p>\n    </li>\n    <Link to=\"/Home\">\n      <li className=\"li-header\" id=\"productos\">Productos</li>\n    </Link>\n    <Link to=\"/OrdersKitchen\">\n      <li className=\"li-header\" id=\"cocina\">Cocina </li>\n    </Link>\n    <Link to=\"/OrdersKitchen\">\n      <li className=\"li-header\" id=\"mesero\">Mesero </li>\n    </Link>\n  </ul>\n);\nexport default Header;\n","import React from 'react';\nimport './ItemOrder.css';\nimport PropTypes from 'prop-types';\nimport trash from '../../assets/images/garbage.svg';\n\nconst ItemOrder = ({\n  name, qty, price, _id, deleteProduct,\n}) => (\n  <tr>\n    <td data-testid=\"item-name\">{name}</td>\n    <td data-testid=\"item-qty\">{qty}</td>\n    <td>\n      S/.\n      {price * qty}\n      .00\n    </td>\n    <td>\n      <span id=\"btn-deleted\" className=\"btn-deleted\"><img id=\"trash\" src={trash} alt=\"Eliminar\" onClick={() => deleteProduct(_id)} /></span>\n    </td>\n  </tr>\n);\n\nItemOrder.propTypes = {\n  deleteProduct: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  qty: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired,\n  _id: PropTypes.string.isRequired,\n};\n\nexport default ItemOrder;\n","import React from 'react';\nimport './Orders.css';\nimport PropTypes from 'prop-types';\nimport ItemOrder from '../ItemOrder/ItemOrder';\n\nconst Orders = ({\n  dataOrder, deleteProduct, sendOrder, handleName,\n}) => {\n  let totalPrice = 0;\n  dataOrder.forEach((el) => {\n    totalPrice += el.price * el.qty;\n  });\n  return (\n    <div className=\"container-order\">\n      <div className=\"order-body\">\n        <h4>Nueva Orden</h4>\n        <input type=\"text\" className=\"txt-form\" id=\"name-client\" placeholder=\"Ingrese nombre del cliente\" onChange={handleName} />\n        <table className=\"egt\">\n          <thead>\n            <tr>\n              <th>Producto</th>\n              <th>Cantidad</th>\n              <th>Precio</th>\n              <th>Eliminar</th>\n            </tr>\n          </thead>\n          <tbody>\n            {dataOrder.map((objOrder) => (\n              <ItemOrder\n                key={objOrder._id}\n                name={objOrder.name}\n                price={objOrder.price}\n                qty={objOrder.qty}\n                _id={objOrder._id}\n                deleteProduct={deleteProduct}\n              />\n            ))}\n            <tr>\n              <th>Total</th>\n              <th>{' '}</th>\n              <th>\n                S/.\n                {totalPrice}\n                .00\n              </th>\n              <th>{' '}</th>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          className=\"btn-enviar\"\n          id=\"btn-enviar\"\n          type=\"submit\"\n          onClick={sendOrder}\n        >\n          Enviar a Cocina\n        </button>\n      </div>\n    </div>\n  );\n};\n\nOrders.propTypes = {\n  dataOrder: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteProduct: PropTypes.func.isRequired,\n  sendOrder: PropTypes.func.isRequired,\n  handleName: PropTypes.func.isRequired,\n};\n\nexport default Orders;\n","const getProducts = (token) => fetch('http://138.68.51.45/products?limit=13', {\n  // http://localhost:3003/products\n// http://138.68.51.45/products\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n}).then((res) => {\n  if (res.status === 200) {\n    return res.json();\n  }\n  if (res.status === 401) {\n    return Promise.reject(console.log('no existe autentificación'));\n  }\n  return (console.log(res.statusText));\n});\nexport default getProducts;\n","const Addorders = (token, userId, client, products) => fetch('http://138.68.51.45/orders', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n  body: JSON.stringify({ userId, client, products }),\n}).then((res) => {\n  if (res.status === 200) {\n    return res.json();\n  } if (res.status === 400) {\n    return Promise.reject(console.log('Ingrese productos'));\n  }\n  return Promise.reject(console.log('No existe autentificación'));\n});\n\nexport default Addorders;\n","import React, { useState, useEffect } from 'react';\nimport Menu from '../components/Menu/Menu';\nimport Header from '../components/Header/Header';\nimport Orders from '../components/Orders/Orders';\nimport getProducts from '../controller/products';\nimport AddOrders from '../controller/Orders/AddOrders';\nimport styles from '../styles.module.css';\n\nconst Home = () => {\n  const [dataProducts, setDataProducts] = useState([]);\n  const [dataOrder, setDataOrder] = useState([]);\n  const [category, setCategory] = useState('');\n  const [client, setClient] = useState('');\n  const token = localStorage.getItem('token');\n\n  const updateProducts = () => getProducts((localStorage.getItem('token'))).then((res) => (category !== '' ? setDataProducts(res.filter((obj) => obj.type === category))\n    : setDataProducts(res)));\n  useEffect(() => {\n    updateProducts();\n  }, [category]);\n\n  const handleClick = (type) => {\n    setCategory(type);\n  };\n\n  const addProduct = (count, idProduct) => {\n    const arr = dataOrder;\n    const index = dataOrder.findIndex((objProduct) => objProduct._id === idProduct);\n    if (index >= 0) {\n      arr[index].qty += count;\n      setDataOrder(arr);\n    } else {\n      const tempProduct = dataProducts.find((obj) => obj._id === idProduct);\n      tempProduct.qty = count;\n      arr.push(tempProduct);\n      setDataOrder(arr);\n    }\n    console.log(arr);\n    updateProducts();\n  };\n\n  const deleteProduct = (idProduct) => {\n    const arr = dataOrder;\n    const index = dataOrder.findIndex((obj) => obj._id === idProduct);\n    arr.splice(index, 1);\n    setDataOrder(arr);\n    console.log(arr);\n    updateProducts();\n  };\n\n  const sendOrder = () => {\n    const userId = '01';\n    if (!client) {\n      alert('Ingrese nombre del cliente');\n    } else {\n      AddOrders(token,\n        userId,\n        client,\n        dataOrder.map((objOrder) => ({ productId: objOrder._id, qty: objOrder.qty })))\n        .then(() => setClient(''), setDataOrder([]));\n    }\n  };\n  const handleName = (e) => {\n    setClient(e.target.value);\n  };\n\n\n  return (\n    <div className={styles.flex}>\n      <Header />\n      <Menu\n        handleClick={handleClick}\n        dataProducts={dataProducts}\n        addProduct={addProduct}\n      />\n      <Orders\n        dataOrder={dataOrder}\n        deleteProduct={deleteProduct}\n        sendOrder={sendOrder}\n        handleName={handleName}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './Menu.css';\n\n\nconst MenuKitchen = ({ chooseCategory }) => (\n  <>\n    <ul>\n      <li><a href=\"#breakfast\" id=\"pending\" onClick={() => chooseCategory('pending')}>Pediente</a></li>\n      <li><a href=\"#lunch\" id=\"delivered\" onClick={() => chooseCategory('delivered')}>Entregado</a></li>\n      <li><a href=\"#complements\" id=\"delivering\" onClick={() => chooseCategory('delivering')}>Entregando</a></li>\n      <li><a href=\"#drinks\" id=\"cancel\" onClick={() => chooseCategory('canceled')}>Cancelado</a></li>\n    </ul>\n  </>\n);\n\n\nexport default MenuKitchen;\n","const EditOrder = (client, ArrayProduct, token, userId, status, _id) => fetch(`http://138.68.51.45/orders/${_id}`, {\n  method: 'PUT',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n  body: JSON.stringify({\n    userId, client, ArrayProduct, status,\n  }),\n}).then((res) => {\n  if (res.status === 200) {\n    console.log('ok');\n    return res.json();\n  } if (res.status === 400) {\n    return Promise.reject(console.log('No se indica propiedad a modificar'));\n  } if (res.status === 401) {\n    return Promise.reject(console.log('No existe autentificación'));\n  }\n  if (res.status === 404) {\n    return Promise.reject(console.log('No existe ID de orden', userId, _id, client, ArrayProduct, status));\n  }\n  return '';\n});\n\n\nexport default EditOrder;\n","const DeleteOrder = (token, _id) => fetch(`http://138.68.51.45/orders/${_id}`, {\n  method: 'DELETE',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n}).then((res) => {\n  if (res.status === 200) {\n    console.log(_id);\n    return res.json();\n  } if (res.status === 401) {\n    return Promise.reject(console.log('No existe autentificación'));\n  } if (res.status === 404) {\n    return Promise.reject(console.log('No existe ID'));\n  }\n\n  return console.log(res.statusText);\n});\n\n\nexport default DeleteOrder;\n","import React, { useEffect } from 'react';\nimport './ItemOrderProducts.css';\nimport PropTypes from 'prop-types';\nimport EditOrder from '../../controller/Orders/EditOrder';\nimport DeleteOrder from '../../controller/Orders/DeleteOrder';\nimport trash from '../../assets/images/garbage.svg';\n\nconst ItemOrderProducts = ({\n  client, ArrayProduct, dateEntry, status, dateProcessed, _id, userId, viewAllOrder,\n}) => {\n  const changeStatusOrder = (e) => {\n    EditOrder(client, ArrayProduct, localStorage.getItem('token'), userId, e.target.value, _id, dateEntry)\n      .then(() => viewAllOrder());\n  };\n  const deleteOrder = () => {\n    DeleteOrder(localStorage.getItem('token'), _id).then((res) => console.log(res), viewAllOrder());\n  };\n  useEffect(() => {\n    viewAllOrder();\n  }, [status]);\n  return (\n    <>\n      <span id=\"btn-deleted-trash\"><img id=\"trash-order\" src={trash} alt=\"Eliminar\" onClick={deleteOrder} /></span>\n\n      <p className=\"item-title\"> Órden</p>\n      <table className=\"egt\" key={_id}>\n        <thead />\n        <tbody>\n          <tr>\n            <th>Cliente</th>\n            <td>{client}</td>\n          </tr>\n          <tr>\n            <th>Producto</th>\n            <th>Cantidad</th>\n          </tr>\n          <tr>\n            <td>\n              {ArrayProduct.map((objProduct) => (\n                <div className=\"row-product\" key={objProduct.product._id}>{objProduct.product.name}</div>\n              ))}\n            </td>\n            <td>\n              {ArrayProduct.map((objProduct) => (\n                <div className=\"row-product\" key={objProduct.product._id}>{objProduct.qty}</div>\n              ))}\n            </td>\n          </tr>\n          <tr>\n            <th>Estado</th>\n            <td>\n              <select id=\"status\" value={status} onChange={changeStatusOrder}>\n                <option value={status}>\n                  {' '}\n                  {status}\n                </option>\n                <option value=\"delivering\">Entregando</option>\n                <option value=\"canceled\">Cancelado</option>\n                <option value=\"delivered\">Entregado</option>\n\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <th>Fecha de creación</th>\n            <td>{dateEntry}</td>\n          </tr>\n          <tr>\n            <th>Fecha de cambio de estado</th>\n            <td>{dateProcessed}</td>\n          </tr>\n\n\n        </tbody>\n      </table>\n    </>\n  );\n};\nItemOrderProducts.propTypes = {\n  ArrayProduct: PropTypes.arrayOf(PropTypes.object).isRequired,\n  _id: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  client: PropTypes.string.isRequired,\n  dateEntry: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  dateProcessed: PropTypes.string.isRequired,\n};\n\nexport default ItemOrderProducts;\n","const GetOrders = (token) => fetch('http://138.68.51.45/orders', {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n}).then((res) => {\n  if (res.status === 200) {\n    return res.json();\n  }\n  return Promise.reject(console.log('No existe autentificación'));\n});\n\nexport default GetOrders;\n","import React, { useState, useEffect } from 'react';\nimport './OrderKitchen.css';\nimport MenuKitchen from '../Menu/MenuKitchen';\nimport ItemOrderProducts from '../ItemOrderProducts/ItemOrderProducts';\nimport GetOrders from '../../controller/Orders/GetOrders';\nimport Header from '../Header/Header';\n// import EditOrder from '../Orders/EditOrder';\n\nconst OrderKitchen = () => {\n  const [AlldataOrder, setAllDataOrder] = useState([]);\n  const [category, setCategory] = useState('');\n  // const [status, setStatus] = useState('');\n  const viewAllOrder = () => {\n    GetOrders(localStorage.getItem('token')).then((NewDataOrders) => (category !== '' ? setAllDataOrder(NewDataOrders.filter((obj) => obj.status === category))\n      : setAllDataOrder(NewDataOrders)));\n  };\n  useEffect(() => {\n    viewAllOrder();\n  }, [category]);\n\n  const chooseCategory = (type) => {\n    setCategory(type);\n  };\n\n  return (\n    <>\n      <Header />\n      <MenuKitchen\n        chooseCategory={chooseCategory}\n      />\n      <section className=\"kitchen-view\">\n        {AlldataOrder.length > 0\n          ? AlldataOrder.map((objOrder) => (\n            <div className=\"container-order-kitchen\" key={objOrder._id}>\n              <div className=\"order-body-kitchen\">\n\n                <ItemOrderProducts\n                  _id={objOrder._id}\n                  userId={objOrder.userId}\n                  AllDataOrder={AlldataOrder}\n                  ArrayProduct={objOrder.products}\n                  objOrder={objOrder}\n                  client={objOrder.client}\n                  dateEntry={objOrder.dateEntry}\n                  status={objOrder.status}\n                  dateProcessed={objOrder.dateProcessed}\n                  viewAllOrder={viewAllOrder}\n                />\n\n              </div>\n            </div>\n          ))\n          : <h5> No hay Órdenes </h5>}\n      </section>\n    </>\n  );\n};\nexport default OrderKitchen;\n","import React from 'react';\n// import './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport LoginApp from './containers/LoginApp';\nimport Home from './containers/Home';\nimport OrdersKitchen from './components/OrderKitchen/OrderKitchen';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <>\n        <Switch>\n          <Route path=\"/Home\" component={Home} />\n          <Route path=\"/OrdersKitchen\" component={OrdersKitchen} />\n          <Route exact path=\"/\" component={LoginApp} />\n        </Switch>\n      </>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}